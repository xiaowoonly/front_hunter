<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
xmlns:context="http://www.springframework.org/schema/context"  
xmlns:aop="http://www.springframework.org/schema/aop"  
xmlns:tx="http://www.springframework.org/schema/tx"  
xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd  
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">  
    
    <!-- 启用注解 -->
	<context:annotation-config/>
    
    <!-- 引入properties配置文件 -->  
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
    	<property name="locations" value="classpath:dbconfig.properties"/>  
    </bean>  
	<!-- 自动扫描 -->  
    <context:component-scan base-package="com.xiaowo" />  
	  
     <!-- 开启自动扫包 -->
     <context:component-scan base-package="com.xiaowo">
       <!--制定扫包规则，不扫描@Controller注解的JAVA类，其他的还是要扫描  -->
         <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
     </context:component-scan>
     
     <context:property-placeholder location="classpath:dbconfig.properties"/>
     <!-- 配置数据源 -->	
     <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" 
		destroy-method="close">
		<!-- 数据库基本信息配置 -->
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<property name="driverClassName" value="${driverClassName}" />
		<property name="filters" value="${filters}" />
		<!-- 最大并发连接数 -->
		<property name="maxActive" value="${maxActive}" />
		<!-- 初始化连接数量 -->
		<property name="initialSize" value="${initialSize}" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${maxWait}" />
		<!-- 最小空闲连接数 -->
		<property name="minIdle" value="${minIdle}" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />
		<property name="validationQuery" value="${validationQuery}" />
		<property name="testWhileIdle" value="${testWhileIdle}" />
		<property name="testOnBorrow" value="${testOnBorrow}" />
		<property name="testOnReturn" value="${testOnReturn}" />
		<property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}" />
		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="${removeAbandoned}" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="${logAbandoned}" />
	</bean> 
    
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx --> 
    <bean name="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
    
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!-- 自动扫描mapper.xml文件 -->  
        <property name="mapperLocations" value="classpath:com/xiaowo/mapper/*.xml"/> 
    </bean>  
  
   <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
         <!--basePackage指定要扫描的包，在此包之下的映射器都会被搜索到。
         可指定多个包，包与包之间用逗号或分号分隔-->
        <property name="basePackage" value="com.xiaowo.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean> 
    
    <!-- Shiro Filter -->
	<!-- <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />

		<property name="loginUrl" value="/" />

		<property name="successUrl" value="/main/index" />

		<property name="unauthorizedUrl" value="/login_toLogin" />

		<property name="filterChainDefinitions">
			<value>
				/API/** = anon
				/static/login/** = anon
				/static/js/myjs/** = authc
				/static/js/** = anon
				/uploadFiles/uploadImgs/** = anon
				/code.do = anon
				/login_login = anon
				/app**/** = anon
				/weixin/** = anon
				/pay/* = anon
				/alipay/* = anon
				/payment/** = anon
				/library/** = anon
				/middleWare/** = anon
				/rebot/** = anon
				/** = authc
				
			</value>
		</property>
	</bean>  -->  
</beans>